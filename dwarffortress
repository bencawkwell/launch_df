#!/bin/bash

usage()
{
cat << EOF
usage: $0 options

This script launches Dwarf Fortress

USAGE:
    dwarffortress [OPTION…]

OPTIONS:
   -h, --help           Show this message
   -s, --skip-intro     Skip the intro
   -u, --update-saves   If a new tile set has been added this wil update existing save folders

EXAMPLE USAGE:
   dwarffortress --skip-intro
EOF
}

updateSaves()
{
    DFPATH=$1
    if [ -d "$DFPATH/data/save" ] ; then
        echo "Updating saved games"
        for FILE in $DFPATH/data/save/* ; do
            if [ -d "$FILE" -a "`basename ${FILE}`" != "current" ]; then
                echo -n "Updating '$FILE'... "
                rm -rf "$FILE/raw"
                cp -a "$DFPATH/raw" "$FILE/raw"
                echo "done."
            fi
        done
    fi
}

# Read configuration
typeset -A config # init array
config=( # set default values in config array
    [df_dir]="/df_linux"
    [df_launcher]="df"
)
while read line
do
    if echo $line | grep -F = &>/dev/null
    then
        varname=$(echo "$line" | cut -d '=' -f 1)
        config[$varname]=$(echo "$line" | cut -d '=' -f 2-)
    fi
done < /etc/dwarffortress.conf

# Transform long options to short ones
for arg in "$@"; do
  shift
  case "$arg" in
    "--help")           set -- "$@" "-h" ;;
    "--skip-intro")     set -- "$@" "-s" ;;
    "--update-saves")   set -- "$@" "-u" ;;
    *)                  set -- "$@" "$arg"
  esac
done
# Handle options
while getopts “:hsu” OPTION
do
    case $OPTION in
        h)
            usage
            exit 1
            ;;
        s)
            sed -i -r "s/^\[INTRO:.+\]/[INTRO:$INTRO]/" ${config[df_dir]}/data/init/init.txt
            ;;
        u)
            updateSaves "${config[df_dir]}"
            ;;
        ?)
            usage
            exit
            ;;
    esac
done

(cd ${config[df_dir]} && ./${config[df_launcher]})